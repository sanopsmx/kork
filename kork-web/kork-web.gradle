apply plugin: "java-library"
apply plugin: "groovy"

sourceSets {
  main {
    java { srcDirs = [] }
    groovy { srcDirs += ['src/main/java'] }
  }
}

dependencies {
  api(platform(project(":spinnaker-dependencies")))

  api project(":kork-core")
  api project(":kork-security")
  api project(":kork-exceptions")
  api "org.apache.groovy:groovy:4.0.9"
  api "org.springframework.boot:spring-boot-starter-web"
  api "org.springframework.boot:spring-boot-starter-security"
  api "org.springframework.security:spring-security-core"
  api "com.netflix.spectator:spectator-api:1.5.3"
  api "com.fasterxml.jackson.core:jackson-annotations"
  // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
  api 'com.squareup.okhttp3:okhttp:5.0.0-alpha.11'
  api "com.squareup.okhttp:okhttp:2.7.5"

  //api "com.squareup.retrofit:retrofit"
  // https://mvnrepository.com/artifact/com.squareup.retrofit2/retrofit
  api 'com.squareup.retrofit:retrofit:1.9.0'


  implementation "com.google.guava:guava"
  implementation "javax.inject:javax.inject:1"
  implementation("com.netflix.spectator:spectator-web-spring:1.5.3") {
    // exclude transitives since this brings in a newer version of spring (boot)
    // dependencies than we're compatible with (2.2.x for spring boot and 5.2.x
    // for spring as of version 1.0.5 of spectator).
    transitive = false
  }
  implementation "io.zipkin.brave:brave-instrumentation-okhttp3"

  compileOnly "org.springframework.boot:spring-boot-starter-actuator"

  runtimeOnly "org.hibernate.validator:hibernate-validator"

  testImplementation project(":kork-test")
  testImplementation "ch.qos.logback:logback-classic"
  testImplementation "ch.qos.logback:logback-core"
  testImplementation "org.spockframework:spock-core"
  testImplementation "org.spockframework:spock-spring"
  testImplementation "org.springframework.boot:spring-boot-starter-test"
  testImplementation "com.netflix.spectator:spectator-reg-micrometer"
  testRuntimeOnly "cglib:cglib-nodep"
  testRuntimeOnly "org.objenesis:objenesis"
}

test {
  useJUnitPlatform()
}
